{"version":3,"sources":["../../src/controller/panel.js"],"names":["create","req","res","body","urlImage","file","filename","err","data","json","success","massage","list","limit","remove","id","params","status","link","console","log","fs","unlinkSync","edit","panelEdit","getById","send","getLimitPanel","removeMultiple","ids","arrId","split"],"mappings":"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","file":"panel.js","sourcesContent":["import { createPanel, listPanel, deletePanel, editPanel, getPanelById, deleteMultiplePanel } from '../models/panel';\r\nimport fs from 'fs';\r\n\r\nexport const create = (req, res) => {\r\n    req.body.urlImage = req.file.filename;\r\n    createPanel(req.body, (err, data) => {\r\n        if(err) {\r\n            res.json({\r\n                success: false,\r\n                massage: \"error upload image\"\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: true,\r\n                massage: \"upload image success\"\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const list = (req, res) => {\r\n    const limit = \"\";\r\n    listPanel(limit, (err, data) => {\r\n        if(err) {\r\n            res.json({\r\n                success: false\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: true,\r\n                data\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const remove = (req, res) => {\r\n    const { id } = req.params;\r\n    deletePanel(id, (err, data) => {  \r\n        if(err) {\r\n            res.status(500).json({\r\n                success: false\r\n            })\r\n        } else {\r\n            try{\r\n                const link = `upload/${data.urlImage}`;\r\n                console.log(\"link\", link);\r\n                fs.unlinkSync(link);\r\n                \r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n            res.status(200).json({\r\n                success: true,\r\n                id\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const edit = (req, res) => {\r\n    const { id } = req.params;\r\n    const data = req.body;\r\n    // console.log(\"req.file\", req.file);\r\n    console.log(\"req.file\", req.file);\r\n    console.log(\"data\", data);\r\n    //check new file upload\r\n    if(req.file) {\r\n        data.urlImage = req.file.filename;\r\n    }\r\n    editPanel(id, data, (err, panelEdit) => {\r\n        if(err) {\r\n            res.json({\r\n                success: false\r\n            })\r\n        } else {\r\n           console.log(\"panelEdit\", panelEdit);\r\n           console.log(\"req.file\", req.file);\r\n            res.json({\r\n                success: true\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const getById = (req, res) => {\r\n    const { id } = req.params;\r\n    getPanelById(id, (err, data) => {\r\n        if(err) {\r\n            res.status(500).send();\r\n        } else {\r\n            res.status(200).json({\r\n                data\r\n            })\r\n        }\r\n    })\r\n}\r\nexport const getLimitPanel = (req, res) => {\r\n    const limit = 3;\r\n    listPanel(limit, (err, data) => {\r\n        if(err) {\r\n            res.json({\r\n                success: false\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: true,\r\n                data\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeMultiple = (req, res) => {\r\n    const { ids } = req.params;\r\n    const arrId = ids.split(',')\r\n    console.log(\"dsd\", arrId)\r\n    console.log(typeof(arrId))\r\n    deleteMultiplePanel(arrId, (err, data) => {\r\n        if(err) {\r\n            console.log(err)\r\n            res.json({\r\n                success: false\r\n            })\r\n        } else {\r\n            res.json({\r\n                success: true,\r\n            })\r\n        }\r\n    })\r\n}"]}