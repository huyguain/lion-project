{"version":3,"sources":["../../src/controller/location.js"],"names":["create","req","res","body","err","data","json","success","message","list","getOne","id","params","console","log","edit","remove"],"mappings":";;;;;;;AAAA;;AAKO,IAAMA,0BAAS,SAATA,MAAS,CAACC,GAAD,EAAMC,GAAN,EAAc;AAChC,kCAAeD,IAAIE,IAAnB,EAAyB,UAACC,GAAD,EAAMC,IAAN,EAAe;AACpC,YAAID,GAAJ,EAAS;AACLF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,KADJ;AAELC,yBAASJ;AAFJ,aAAT;AAIH,SALD,MAMK;AACDF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,IADJ;AAELC,yBAAS;AAFJ,aAAT;AAIH;AACJ,KAbD;AAcH,CAfM;;AAiBA,IAAMC,sBAAO,SAAPA,IAAO,CAACR,GAAD,EAAMC,GAAN,EAAc;AAC9B,gCAAa,UAACE,GAAD,EAAMC,IAAN,EAAe;AACxB,YAAID,GAAJ,EAAS;AACLF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,KADJ;AAELC,yBAASJ;AAFJ,aAAT;AAIH,SALD,MAMK;AACDF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,IADJ;AAELC,yBAAS,SAFJ;AAGLH;AAHK,aAAT;AAKH;AACJ,KAdD;AAeH,CAhBM;;AAkBA,IAAMK,0BAAS,SAATA,MAAS,CAACT,GAAD,EAAMC,GAAN,EAAc;AAAA,QACxBS,EADwB,GACjBV,IAAIW,MADa,CACxBD,EADwB;;AAEhCE,YAAQC,GAAR,CAAYH,EAAZ;AACA,kCAAeA,EAAf,EAAmB,UAACP,GAAD,EAAMC,IAAN,EAAe;AAC9B,YAAID,GAAJ,EAAS;AACLF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,KADJ;AAELC,yBAASJ;AAFJ,aAAT;AAIH,SALD,MAMK;AACDF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,IADJ;AAELC,yBAAS,SAFJ;AAGLH;AAHK,aAAT;AAKH;AACJ,KAdD;AAeH,CAlBM;;AAoBA,IAAMU,sBAAO,SAAPA,IAAO,CAACd,GAAD,EAAMC,GAAN,EAAc;AAAA,QACtBS,EADsB,GACfV,IAAIW,MADW,CACtBD,EADsB;;AAE9B,gCAAaA,EAAb,EAAiBV,IAAIE,IAArB,EAA2B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACtC,YAAID,GAAJ,EAAS;AACLF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,KADJ;AAELC,yBAASJ;AAFJ,aAAT;AAIH,SALD,MAKO;AACHF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,IADJ;AAELC,yBAAS,SAFJ;AAGLH;AAHK,aAAT;AAKH;AACJ,KAbD;AAcH,CAhBM;;AAkBA,IAAMW,0BAAS,SAATA,MAAS,CAACf,GAAD,EAAMC,GAAN,EAAc;AAAA,QACxBS,EADwB,GACjBV,IAAIW,MADa,CACxBD,EADwB;;AAEhC,kCAAeA,EAAf,EAAmB,eAAO;AACtB,YAAIP,GAAJ,EAAS;AACLF,gBAAII,IAAJ,CAAS;AACLC,yBAAS,KADJ;AAELC,yBAAS;AAFJ,aAAT;AAIH,SALD,MAKO;AACHN,gBAAII,IAAJ,CAAS;AACLC,yBAAS,IADJ;AAELC,yBAAS;AAFJ,aAAT;AAIH;AACJ,KAZD;AAaH,CAfM","file":"location.js","sourcesContent":["import {\n    createLocaiton, listLocation, getOneLocation,\n    editLocation, removeLocation\n} from '../models/location'\n\nexport const create = (req, res) => {\n    createLocaiton(req.body, (err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        }\n        else {\n            res.json({\n                success: true,\n                message: 'success'\n            })\n        }\n    })\n}\n\nexport const list = (req, res) => {\n    listLocation((err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        }\n        else {\n            res.json({\n                success: true,\n                message: 'success',\n                data\n            })\n        }\n    })\n}\n\nexport const getOne = (req, res) => {\n    const { id } = req.params\n    console.log(id)\n    getOneLocation(id, (err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        }\n        else {\n            res.json({\n                success: true,\n                message: 'success',\n                data\n            })\n        }\n    })\n}\n\nexport const edit = (req, res) => {\n    const { id } = req.params\n    editLocation(id, req.body, (err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        } else {\n            res.json({\n                success: true,\n                message: 'success',\n                data\n            })\n        }\n    })\n}\n\nexport const remove = (req, res) => {\n    const { id } = req.params\n    removeLocation(id, err => {\n        if (err) {\n            res.json({\n                success: false,\n                message: 'error'\n            })\n        } else {\n            res.json({\n                success: true,\n                message: 'success'\n            })\n        }\n    })\n}\n\n"]}