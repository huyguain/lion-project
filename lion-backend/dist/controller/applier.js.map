{"version":3,"sources":["../../src/controller/applier.js"],"names":["nodemailer","require","create","req","res","console","log","body","err","data","json","success","message","_id","applier","dataMail","list","getOne","id","params","edit","remove"],"mappings":"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","file":"applier.js","sourcesContent":["import { createApplier, listApplier, getOneApplier, editApplier, removeApplier } from '../models/applier'\nvar nodemailer = require('nodemailer');\nimport { sendApply } from '../lib/mailer'\n\nexport const create = (req, res) => {\n    console.log('req.body', req.body)\n    createApplier(req.body, async (err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        } else {\n            console.log('data-payload', data)\n            // let payload = {\n            //     TO: dataCandidate.email,\n            //     code: dataEntryCode.code\n            // }\n            // console.log({payload})\n            await getOneApplier(data._id, (err, applier) => {\n                if (err) {\n                    res.json({\n                        success: false,\n                        message: err\n                    })\n                } else {\n                    sendApply(applier[0], (err, dataMail) => { console.log(dataMail) })\n                }\n            })\n            res.json({\n                success: true,\n                message: 'success'\n            })\n        }\n    })\n}\n\nexport const list = (req, res) => {\n    listApplier((err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        } else {\n            console.log('data', data)\n            res.json({\n                success: true,\n                message: 'success',\n                data\n            })\n        }\n    })\n}\n\nexport const getOne = (req, res) => {\n    const { id } = req.params\n    getOneApplier(id, (err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        } else {\n            res.json({\n                success: true,\n                message: 'success',\n                data\n            })\n        }\n    })\n}\n\nexport const edit = (req, res) => {\n    const { id } = req.params\n    editApplier(id, req.body, (err, data) => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        } else {\n            res.json({\n                success: true,\n                message: 'success',\n                data\n            })\n        }\n    })\n}\n\nexport const remove = (req, res) => {\n    const { id } = req.params\n    removeApplier(id, err => {\n        if (err) {\n            res.json({\n                success: false,\n                message: err\n            })\n        } else {\n            res.json({\n                success: true,\n                message: 'success'\n            })\n        }\n    })\n}\n\n\n\n"]}