{"version":3,"sources":["../../src/models/learningPathCustomise.js"],"names":["LearningPathCustomise","Schema","language","String","learningPath","title","content","courseIds","type","Types","ObjectId","ref","LearningPathCustomiseTable","mongoose","model","_createLearningPathCus","data","dataCoures","id","push","_LearningPathCustomiseTable","save","err","dataLearning","_getAllLearningCus","find","populate","path","select","exec","_deleteLearningCus","_id","remove","_getLearningCusById","findOne","_editLearningCusById","findOneAndUpdate","_getLearningForClass"],"mappings":"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","file":"learningPathCustomise.js","sourcesContent":["import mongoose, { Mongoose, Schema } from 'mongoose';\r\n\r\nconst LearningPathCustomise = new Schema({\r\n    language: String,\r\n    learningPath: String,\r\n    title: String,\r\n    content: String,\r\n    courseIds: [{\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Course'\r\n    }]\r\n})\r\nconst LearningPathCustomiseTable = mongoose.model('LearningCustomise', LearningPathCustomise);\r\n\r\nexport const _createLearningPathCus = (data, dataCoures) => {\r\n    let courseIds = [];\r\n    for (const id of dataCoures) {\r\n        courseIds.push(id)\r\n    }\r\n    let _LearningPathCustomiseTable = new LearningPathCustomiseTable({\r\n        language: data.language,\r\n        learningPath: data.learningPath,\r\n        title: data.title,\r\n        content: data.content,\r\n        courseIds: courseIds\r\n    })\r\n    return _LearningPathCustomiseTable.save((err, dataLearning) => {\r\n        if (err) {\r\n            return ('Create Learning Error !')\r\n        } else {\r\n            return dataLearning\r\n        }\r\n    })\r\n}\r\n//getAllLearningCus\r\nexport const _getAllLearningCus = () => {\r\n    return LearningPathCustomiseTable.find({})\r\n        .populate({\r\n            path: \"courseIds\",\r\n            select: [\"courseName\"]\r\n        }).exec((err, data) => {\r\n            if (err) {\r\n                throw ('Get Learning Error !')\r\n            } else {\r\n                return data\r\n            }\r\n        })\r\n}\r\n//deleteLearningCus\r\nexport const _deleteLearningCus = (_id) => {\r\n    return LearningPathCustomiseTable.remove({ _id }).exec(err => {\r\n        if (err) {\r\n            return ('Delete Learning Error !')\r\n        } else {\r\n            return 1;\r\n        }\r\n    })\r\n}\r\n//getLearningCusById\r\nexport const _getLearningCusById = (_id) => {\r\n    return LearningPathCustomiseTable.findOne({ _id }).exec((err, data) => {\r\n        if (err) {\r\n            return ('Get Learning Error!')\r\n        } else {\r\n            return data\r\n        }\r\n    })\r\n}\r\n//_editLearningCusById\r\nexport const _editLearningCusById = (_id, dataLearning, dataCoures) => {\r\n    let courseIds = [];\r\n    for (const id of dataCoures) {\r\n        courseIds.push(id)\r\n    }\r\n    return LearningPathCustomiseTable.findOneAndUpdate({ _id }, {\r\n        language: dataLearning.language,\r\n        learningPath: dataLearning.learningPath,\r\n        title: dataLearning.title,\r\n        content: dataLearning.content,\r\n        courseIds: courseIds\r\n    }).exec((err, data) => {\r\n        if (err) {\r\n            return ('Update Data Error !')\r\n        } else {\r\n            return data\r\n        }\r\n    })\r\n}\r\n//getLearningForClass\r\nexport const _getLearningForClass = () => {\r\n    return LearningPathCustomiseTable.find({})\r\n        .select({ learningPath: 1 })\r\n        .exec((err, data) => {\r\n            if (err) {\r\n                return ('Get Learning Error!')\r\n            } else {\r\n                return data\r\n            }\r\n        })\r\n}"]}