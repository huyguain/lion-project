{"version":3,"sources":["../../src/models/offer.js"],"names":["offerSchema","Schema","icon","String","content","Offer","mongoose","model","createOffer","body","callback","create","err","data","listOffer","find","sort","_id","then","catch","getOneOffer","console","log","editOffer","findByIdAndUpdate","new","removeOffer","remove"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAIA,cAAc,IAAIC,gBAAJ,CAAW;AACzBC,UAAMC,MADmB;AAEzBC,aAASD;AAFgB,CAAX,CAAlB;;AAKA,IAAME,QAAQC,mBAASC,KAAT,CAAe,OAAf,EAAwBP,WAAxB,CAAd;;AAEO,IAAMQ,oCAAc,SAAdA,WAAc,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAAA,QACnCR,IADmC,GACjBO,IADiB,CACnCP,IADmC;AAAA,QAC7BE,OAD6B,GACjBK,IADiB,CAC7BL,OAD6B;;AAE3CC,UAAMM,MAAN,CAAa;AACTT,kBADS;AAETE;AAFS,KAAb,EAGG,UAACQ,GAAD,EAAMC,IAAN,EAAe;AACd,YAAID,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,eAAOF,SAAS,IAAT,EAAeG,IAAf,CAAP;AACH,KAND;AAOH,CATM;;AAWA,IAAMC,gCAAY,SAAZA,SAAY,CAACJ,QAAD,EAAc;AACnCL,UAAMU,IAAN,CAAW,EAAX,EACIC,IADJ,CACS,EAAEC,KAAK,CAAC,CAAR,EADT,EAEIC,IAFJ,CAGQ;AAAA,eAAQR,SAAS,IAAT,EAAeG,IAAf,CAAR;AAAA,KAHR,EAIMM,KAJN,CAKQ;AAAA,eAAOT,SAASE,GAAT,CAAP;AAAA,KALR;AAOH,CARM;;AAUA,IAAMQ,oCAAc,SAAdA,WAAc,CAACH,GAAD,EAAMP,QAAN,EAAmB;AAC1CW,YAAQC,GAAR,CAAYL,GAAZ;AACAZ,UAAMU,IAAN,CAAW,EAACE,QAAD,EAAX,EAAkB,UAACL,GAAD,EAAMC,IAAN,EAAe;AAC7B,YAAID,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,eAAOF,SAAS,IAAT,EAAeG,IAAf,CAAP;AACH,KAHD;AAIH,CANM;;AAQA,IAAMU,gCAAY,SAAZA,SAAY,CAACN,GAAD,EAAMR,IAAN,EAAYC,QAAZ,EAAyB;AAAA,QACtCR,IADsC,GACpBO,IADoB,CACtCP,IADsC;AAAA,QAChCE,OADgC,GACpBK,IADoB,CAChCL,OADgC;;AAE9CC,UAAMmB,iBAAN,CACIP,GADJ,EAEI,EAAEf,UAAF,EAAQE,gBAAR,EAFJ,EAGI,EAAEqB,KAAK,IAAP,EAHJ,EAII,UAACb,GAAD,EAAMC,IAAN,EAAe;AACX,YAAID,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,eAAOF,SAAS,IAAT,EAAeG,IAAf,CAAP;AACH,KAPL;AASH,CAXM;;AAaA,IAAMa,oCAAc,SAAdA,WAAc,CAACT,GAAD,EAAMP,QAAN,EAAmB;AAC1CL,UAAMsB,MAAN,CAAa,EAACV,QAAD,EAAb,EAAoB,eAAO;AACvB,YAAIL,GAAJ,EAAS,OAAOF,SAASE,GAAT,CAAP;AACT,eAAOF,SAAS,IAAT,CAAP;AACH,KAHD;AAIH,CALM","file":"offer.js","sourcesContent":["import mongoose, { Schema } from 'mongoose'\n\nlet offerSchema = new Schema({\n    icon: String,\n    content: String\n})\n\nconst Offer = mongoose.model('Offer', offerSchema)\n\nexport const createOffer = (body, callback) => {\n    const { icon, content } = body\n    Offer.create({\n        icon,\n        content\n    }, (err, data) => {\n        if (err) return callback(err)\n        return callback(null, data)\n    })\n}\n\nexport const listOffer = (callback) => {\n    Offer.find({}).\n        sort({ _id: -1 }).\n        then(\n            data => callback(null, data)\n        ).catch(\n            err => callback(err)\n        )\n}\n\nexport const getOneOffer = (_id, callback) => {\n    console.log(_id)\n    Offer.find({_id}, (err, data) => {\n        if (err) return callback(err)\n        return callback(null, data)\n    })\n}\n\nexport const editOffer = (_id, body, callback) => {\n    const { icon, content } = body\n    Offer.findByIdAndUpdate(\n        _id,\n        { icon, content },\n        { new: true },\n        (err, data) => {\n            if (err) return callback(err)\n            return callback(null, data)\n        }\n    )\n}\n\nexport const removeOffer = (_id, callback) => {\n    Offer.remove({_id}, err => {\n        if (err) return callback(err)\n        return callback(null)\n    })\n}"]}