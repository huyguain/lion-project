{"version":3,"sources":["../../src/models/testimonial.js"],"names":["Testimonial","Schema","fullName","String","gender","Number","position","content","urlImage","testimonialModel","mongoose","model","createTestimonial","newTestimonial","callback","save","data","listTestimonial","limit","find","getTestimonialById","id","findById","_id","doc","editTestimonial","deleteImage","post","deleteTestimonial","remove","link","fs","unlinkSync","err"],"mappings":"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","file":"testimonial.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\r\nimport multer from \"multer\";\r\nimport fs from \"fs\";\r\n\r\nconst Testimonial = new Schema({\r\n    fullName: String,\r\n    gender: Number,\r\n    position: String,\r\n    content: String,\r\n    urlImage: String\r\n})\r\n\r\nconst testimonialModel = mongoose.model('testimonial', Testimonial);\r\n\r\nexport const createTestimonial = async (newTestimonial, callback) => {\r\n    let Testimonial = new testimonialModel(newTestimonial);\r\n    try {\r\n        const data = await Testimonial.save();\r\n        callback(null, data);\r\n    } catch (err) {\r\n        callback(err);\r\n    }\r\n}\r\n\r\nexport const listTestimonial = async (limit, callback) => {\r\n    try {\r\n        let data = await testimonialModel.find();\r\n        if (!limit) data = await testimonialModel.find().limit(limit);\r\n        callback(null, data);\r\n    } catch (err) {\r\n        callback(err);\r\n    }\r\n}\r\nexport const getTestimonialById = async (id, callback) => {\r\n    try {\r\n        const doc = await testimonialModel.findById({ _id: id });\r\n        callback(null, doc);\r\n    } catch (err) {\r\n        callback(err);\r\n    }\r\n}\r\nexport const editTestimonial = async (id, data, callback) => {\r\n    try {\r\n        let doc = await testimonialModel.findById({ _id: id });\r\n        const { fullName, gender, position, content,\r\n            urlImage } = data;\r\n        doc.fullName = fullName;\r\n        doc.gender = gender;\r\n        doc.position = position;\r\n        doc.content = content;\r\n        if (urlImage) {\r\n            deleteImage(doc.urlImage);\r\n            doc.urlImage = urlImage;\r\n        }\r\n        const post = await doc.save();\r\n        callback(null, doc);\r\n    } catch (err) {\r\n        callback(err);\r\n    }\r\n}\r\n\r\nexport const deleteTestimonial = async (id, callback) => {\r\n    try {\r\n        const data = await testimonialModel.remove({ _id: id });\r\n        callback(null, data);\r\n    } catch (err) {\r\n        callback(err);\r\n    }\r\n}\r\n\r\nconst deleteImage = urlImage => {\r\n    if (urlImage) {\r\n        try {\r\n            const link = `upload/${urlImage}`;\r\n            fs.unlinkSync(link);\r\n        } catch (err) {\r\n        }\r\n    }\r\n}"]}