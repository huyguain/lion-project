{"version":3,"sources":["../../src/midleware/checkGenerateCode.js"],"names":["checkCreateCode","req","res","next","body","numberEasy","numberHard","numberMedium","TemplateId","UserId","language","type","easy","medium","hard","err","data","arr","map","v","level","i","console","log","status","json","success","message","send"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,IAAMA;AAAA,uEAAkB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCACwDF,IAAIG,IAD5D,EACrBC,UADqB,aACrBA,UADqB,EACTC,UADS,aACTA,UADS,EACGC,YADH,aACGA,YADH,EACiBC,UADjB,aACiBA,UADjB,EAC6BC,MAD7B,aAC6BA,MAD7B,EACqCC,QADrC,aACqCA,QADrC,EAC+CC,IAD/C,aAC+CA,IAD/C;AAEvBC,4BAFuB,GAEhB,CAFgB,EAEbC,MAFa,GAEJ,CAFI,EAEDC,IAFC,GAEM,CAFN;AAAA;AAAA;AAAA,+BAIjB,kCAAmBJ,QAAnB,EAA6BC,IAA7B,EAAmC,UAACI,GAAD,EAAMC,IAAN,EAAe;AACpD,gCAAIC,MAAMD,KAAKE,GAAL,CAAS;AAAA,uCAAKC,EAAEC,KAAP;AAAA,6BAAT,CAAV;AADoD;AAAA;AAAA;;AAAA;AAEpD,qDAAcH,GAAd,8HAAmB;AAAA,wCAAVI,CAAU;;AACf,wCAAIA,MAAM,CAAV,EAAa;AACTT;AACH,qCAAC,IAAIS,MAAM,CAAV,EAAa;AACXR;AACH,qCAAC,IAAIQ,MAAM,CAAV,EAAa;AACXP;AACH;AACJ;AAVmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWpDQ,oCAAQC,GAAR,CAAYX,IAAZ,EAAkBC,MAAlB,EAA0BC,IAA1B;AACA,gCAAI,KAAKT,UAAL,IAAmBA,cAAcO,IAAjC,IAAyC,KAAKL,YAA9C,IAA8DD,cAAcO,MAA5E,IAAsF,KAAKP,UAA3F,IAAyGA,cAAcQ,IAA3H,EAAiI;AAC7HX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,6BAZD,MAYO;AACHD,oCAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,6CAAS,KADQ;AAEjBC,6CAAS;AAFQ,iCAArB;AAIH;AAEJ,yBA/BK,CAJiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAqCvBzB,4BAAIsB,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB,OAArB;;AArCuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"checkGenerateCode.js","sourcesContent":["import { getQuestionByCouse } from '../models/question'\r\nimport { checkCode } from '../models/entryCode'\r\n\r\nexport const checkCreateCode = async (req, res, next) => {\r\n    let { numberEasy, numberHard, numberMedium, TemplateId, UserId, language, type } = req.body\r\n    let easy = 0, medium = 0, hard = 0;\r\n    try {\r\n        await getQuestionByCouse(language, type, (err, data) => {\r\n            let arr = data.map(v => v.level)\r\n            for (let i of arr) {\r\n                if (i === 1) {\r\n                    easy++;\r\n                } if (i === 2) {\r\n                    medium++\r\n                } if (i === 3) {\r\n                    hard++\r\n                }\r\n            }\r\n            console.log(easy, medium, hard)\r\n            if (0 <= numberEasy && numberEasy <= easy && 0 <= numberMedium && numberHard <= medium && 0 <= numberHard && numberHard <= hard) {\r\n                next()\r\n                // checkCode(TemplateId, UserId, (err, _data) => {\r\n                //     if (!_data || data === []) {\r\n                //         next()\r\n                //     } else {\r\n                //         return res.status(201).json({\r\n                //             success: false,\r\n                //             message: 'You can not update! '\r\n                //         })\r\n                //     }\r\n                // })\r\n            } else {\r\n                res.status(201).json({\r\n                    success: false,\r\n                    message: 'Not enough quantity!!'\r\n                })\r\n            }\r\n\r\n        })\r\n    } catch (err) {\r\n        res.status(500).send('Error')\r\n    }\r\n}"]}