{"version":3,"sources":["../../src/router/index.js"],"names":["questionController","testTemplateController","entryCodeController","learningPathController","adminController","candidateController","jobController","applierController","locationController","offerController","universityController","panelController","postControlller","testimonialController","categoryController","courseController","router","express","Router","get","getLimitPanel","post","checkCode","checkToken","showData","startTest","listQuestion","endTest","finishTest","checkTokenRole","getDataEntry","createEntryCode","autoCreateEntryCode","getAllEntryCode","patch","regenerate","delete","deleteEntryCode","getAllTemplate","checkTemplate","createTemplate","deleteTemplate","reportTestDetail","createAdmin","deleteAdmin","editAdmin","getAllAdmin","getAdminById","createCanidate","getAllCandidate","getCandidateById","editCandidate","deleteCandidate","importCandidate","uidEnglish","storageQuestionEnglish","multer","diskStorage","destination","req","file","cb","filename","body","testCode","originalname","uploadQuestionEnglish","storage","storageQuestion","fileNameStore","uploadQuestion","any","uploadEnglishExam","uploadFile","addQuestion","exportQuestionFromDB","getQuestionById","editQuestion","deleteQuestion","signIn","upload","single","create","list","remove","removeMultiple","put","edit","getById","search","listOrder","getByTitle","youtube1","getCourse","getOne","listCategory","listLocation","listHashtag","listCategoryLocation","storageApplier","console","log","cv","uploadApplier","storageUniversity","fileUniversity","uploadUniversity","importFile","listMyCourse","updateResultVideo","getQuiz","endEnglishTest","getAllEnglishTest","countEnglishNotPoint","getQuestionEssayEnglishTest","savePointEssayToDb"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\r\nimport * as questionController from '../controller/question';\r\nimport * as testTemplateController from '../controller/testTemplate';\r\nimport * as entryCodeController from '../controller/entryCode';\r\nimport * as learningPathController from '../controller/learningPath';\r\nimport * as adminController from '../controller/admin'\r\nimport * as candidateController from '../controller/candidate'\r\nimport * as jobController from '../controller/jobs'\r\nimport * as applierController from '../controller/applier'\r\nimport * as locationController from '../controller/location'\r\nimport * as offerController from '../controller/offer'\r\nimport * as universityController from '../controller/university'\r\n// import * as englishExamController from '../controller/'\r\nimport { checkTokenRole, checkToken } from '../midleware/checkCode';\r\nimport { checkTemplate } from '../midleware/checkTemplate'\r\nimport { checkGen, checkCreateCode } from '../midleware/checkGenerateCode'\r\nimport multer from 'multer';\r\nimport * as panelController from '../controller/panel';\r\nimport * as postControlller from '../controller/post';\r\nimport * as testimonialController from '../controller/testimonial';\r\nimport * as categoryController from '../controller/category';\r\nimport { requireRole } from '../midleware/requireRole';\r\nimport * as courseController from '../controller/course';\r\n\r\nimport uid from \"uid\";\r\n\r\nconst router = express.Router();\r\n\r\n\r\n/* api user */\r\nrouter.get(\"/limit-list-panel\", panelController.getLimitPanel)\r\nrouter.post('/checkCode', entryCodeController.checkCode);\r\n\r\nrouter.get('/showData', checkToken, entryCodeController.showData);\r\nrouter.post('/startTest', checkToken, entryCodeController.startTest);\r\nrouter.post('/listQuestion', checkToken, entryCodeController.listQuestion);\r\nrouter.post('/end-test', checkToken, entryCodeController.endTest);\r\nrouter.get('/finish-test', checkToken, entryCodeController.finishTest);\r\n\r\n\r\n/* api admin */\r\n/*----------generate code ------------*/\r\nrouter.get('/getDataEntry', checkTokenRole, requireRole(\"Admin,Hr\"), entryCodeController.getDataEntry)\r\nrouter.post('/createEntryCode', checkTokenRole, requireRole(\"Admin,Hr\"), entryCodeController.createEntryCode);\r\nrouter.post('/autoCreateEntryCode', checkTokenRole, requireRole(\"Admin,Hr\"), entryCodeController.autoCreateEntryCode);\r\nrouter.get('/getAllEntryCode', checkTokenRole, requireRole(\"Admin,Hr\"), entryCodeController.getAllEntryCode)\r\nrouter.patch('/regenerate', checkTokenRole, requireRole(\"Admin,Hr\"), entryCodeController.regenerate);\r\nrouter.delete('/deleteEntryCode/:idEntryCode/:idCandidate', checkTokenRole, requireRole(\"Admin,Hr\"), entryCodeController.deleteEntryCode)\r\n\r\n\r\n/*-----------template language---------*/\r\nrouter.get('/getAllTemplate', checkTokenRole, requireRole(\"Admin,Hr\"), testTemplateController.getAllTemplate)\r\nrouter.post('/createTemplate', checkTokenRole, requireRole(\"Admin,Hr\"), checkTemplate, testTemplateController.createTemplate);\r\nrouter.delete('/deleteTemplate/:id', checkTokenRole, requireRole(\"Admin,Hr\"), testTemplateController.deleteTemplate)\r\n\r\n\r\n//report detail test\r\nrouter.get('/report-detail-test/:code', entryCodeController.reportTestDetail);\r\n\r\n\r\n/*-----------admin------------------- */\r\nrouter.post('/createAdmin', checkTokenRole, requireRole(\"Admin\"), adminController.createAdmin);\r\nrouter.delete('/deleteAdmin/:id', checkTokenRole, requireRole(\"Admin\"), adminController.deleteAdmin);\r\nrouter.patch('/editAdmin/:id', checkTokenRole, requireRole(\"Admin\"), adminController.editAdmin);\r\nrouter.get('/getAllAdmin', checkTokenRole, requireRole(\"Admin\"), adminController.getAllAdmin);\r\nrouter.get('/getAdminById/:id', checkTokenRole, requireRole(\"Admin\"), adminController.getAdminById);\r\n\r\n/*-----------Candidate------------------- */\r\nrouter.post('/createCandidate', checkTokenRole, requireRole(\"Admin,Hr\"), candidateController.createCanidate);\r\nrouter.get('/getAllCandidate', checkTokenRole, requireRole(\"Admin,Hr\"), candidateController.getAllCandidate);\r\nrouter.get('/getCandidateById/:id', checkTokenRole, requireRole(\"Admin,Hr\"), candidateController.getCandidateById)\r\nrouter.patch('/editCandidate/:id', checkTokenRole, requireRole(\"Admin,Hr\"), candidateController.editCandidate)\r\nrouter.delete('/deleteCandidate/:id', checkTokenRole, requireRole(\"Admin,Hr\"), candidateController.deleteCandidate)\r\nrouter.post(`/importCandidateByExcel`, checkTokenRole, requireRole(\"Admin,Hr\"), candidateController.importCandidate, entryCodeController.autoCreateEntryCode)\r\n\r\n\r\n/*----------question----------------*/\r\nconst uidEnglish = uid(10)\r\nconst storageQuestionEnglish = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './upload');\r\n    },\r\n    filename: function (req, file, cb) {\r\n        req.body.uidEnglish = uidEnglish\r\n        cb(null, `${uidEnglish}-${req.body.testCode}-${file.originalname}`)\r\n    }\r\n})\r\nconst uploadQuestionEnglish = multer({ storage: storageQuestionEnglish });\r\n\r\nconst storageQuestion = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './upload');\r\n    },\r\n    filename: function (req, file, cb) {\r\n        const fileNameStore = `${uid(10)}-${file.originalname}`\r\n        req.body.fileNameStore = fileNameStore\r\n        cb(null, fileNameStore)\r\n    }\r\n})\r\nconst uploadQuestion = multer({ storage: storageQuestion });\r\nrouter.post('/uploadFileEnglish', checkTokenRole, requireRole(\"Admin,Hr\"), uploadQuestionEnglish.any(), questionController.uploadEnglishExam)\r\nrouter.post('/uploadFile', checkTokenRole, requireRole(\"Admin,Hr\"), uploadQuestion.any(), questionController.uploadFile)\r\nrouter.post('/addQuestion', checkTokenRole, requireRole(\"Admin,Hr\"), questionController.addQuestion)\r\nrouter.get('/getAllQuestion', checkTokenRole, requireRole(\"Admin,Hr\"), questionController.exportQuestionFromDB);\r\nrouter.get('/getQuestionById/:id', checkTokenRole, requireRole(\"Admin,Hr\"), questionController.getQuestionById)\r\nrouter.post('/editQuestion/:id', checkTokenRole, requireRole(\"Admin,Hr\"), questionController.editQuestion);\r\nrouter.delete('/deleteQuestion/:id', checkTokenRole, requireRole(\"Admin,Hr\"), questionController.deleteQuestion);\r\n\r\n\r\n/*----------English------------*/\r\nrouter.get('/getEnglishExam', checkTokenRole, requireRole(\"Admin,Hr\"))\r\n\r\n\r\n/*----------common------------*/\r\n//signIn Admin\r\nrouter.post('/signIn', adminController.signIn);\r\n\r\n/*-----------panel-------------*/\r\n\r\nconst storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './upload');\r\n    },\r\n    filename: function (req, file, cb) {\r\n        cb(null, uid(10) + \"_\" + file.originalname)\r\n    }\r\n})\r\nconst upload = multer({ storage: storage });\r\n\r\n\r\nrouter.post('/createPanel', checkTokenRole, requireRole(\"Admin,Hr\"), upload.single(\"file\"), panelController.create);\r\nrouter.get(\"/list-panel\", checkTokenRole, requireRole(\"Admin,Hr\"), panelController.list)\r\nrouter.delete(\"/delete/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), panelController.remove);\r\nrouter.delete(\"/delete-multiple/:ids\", checkTokenRole, requireRole(\"Admin,Hr\"), panelController.removeMultiple);\r\nrouter.put(\"/edit/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), upload.single(\"file\"), panelController.edit);\r\nrouter.get(\"/panel/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), panelController.getById);\r\n/*--------------post------------*/\r\nrouter.post('/search-post', postControlller.search)\r\nrouter.post(\"/list-post-order\", postControlller.listOrder)\r\nrouter.post('/createPost', checkTokenRole, requireRole(\"Admin,Hr\"), upload.any(), postControlller.create);\r\nrouter.get(\"/list-post\", postControlller.list)\r\nrouter.delete(\"/delete-post/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), postControlller.remove);\r\nrouter.put(\"/edit-post/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), upload.any(), postControlller.edit);\r\nrouter.get(\"/post/:id\", postControlller.getById);\r\n\r\n//testimonialController\r\nrouter.post('/createTestimonial', checkTokenRole, requireRole(\"Admin,Hr\"), upload.any(), testimonialController.create);\r\nrouter.get(\"/list-testimonial\", testimonialController.list)\r\nrouter.delete(\"/delete-testimonial/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), testimonialController.remove);\r\nrouter.post(\"/edit-testimonial/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), upload.any(), testimonialController.edit);\r\nrouter.get(\"/testimonial/:id\", testimonialController.getById);\r\n\r\nrouter.post('/createCategory', checkTokenRole, requireRole(\"Admin,Hr\"), upload.any(), categoryController.create);\r\nrouter.get(\"/list-category\", categoryController.list)\r\nrouter.post(\"/edit-category/:id\", checkTokenRole, requireRole(\"Admin,Hr\"), upload.any(), categoryController.edit);\r\nrouter.get(\"/Category/:id\", categoryController.getById);\r\nrouter.get(\"/getCategoryByTitle/:title\", categoryController.getByTitle);\r\n\r\n/*----------course---------*/\r\nrouter.get('/youtube', courseController.youtube1);\r\nrouter.post('/createCourse', upload.any(), courseController.create);\r\nrouter.get('/course/:id', courseController.getById);\r\nrouter.get('/getCourse/:id', courseController.getCourse);\r\nrouter.get('/list-course', courseController.list);\r\nrouter.get('/search-suggest-course/:value', courseController.search);\r\nrouter.put('/edit-course/:id', upload.any(), courseController.edit);\r\nrouter.delete('/delete-panel/:id', courseController.remove);\r\n// // LearningPath\r\nrouter.post('/create-learning-path', checkTokenRole, learningPathController.create);\r\nrouter.get('/list-learning-path', learningPathController.list);\r\nrouter.get('/get-learning-path/:id', checkTokenRole, learningPathController.getById);\r\nrouter.post('/edit-learning-path/:id', checkTokenRole, learningPathController.edit)\r\nrouter.post('/delete-learning-path/:id', checkTokenRole, learningPathController.remove)\r\n\r\n//jobs\r\nrouter.post('/create-job', checkTokenRole, requireRole(\"Admin,Hr\"), jobController.create)\r\nrouter.get('/list-jobs', jobController.list)\r\nrouter.get('/get-job/:id', jobController.getOne)\r\nrouter.post('/edit-job/:id', checkTokenRole, requireRole(\"Admin,Hr\"), jobController.edit)\r\nrouter.post('/delete-job/:id', checkTokenRole, requireRole(\"Admin,Hr\"), jobController.remove)\r\n\r\nrouter.get('/list-jobs/category/:category', jobController.listCategory)\r\nrouter.get('/list-jobs/location/:location', jobController.listLocation)\r\nrouter.get('/list-jobs/hashtag/:hashtag', jobController.listHashtag)\r\nrouter.get('/list-jobs/:category/:location', jobController.listCategoryLocation)\r\n\r\n//location\r\nrouter.post('/create-location', checkTokenRole, requireRole(\"Admin,Hr\"), locationController.create)\r\nrouter.get('/list-location', locationController.list)\r\nrouter.get('/get-location/:id', checkTokenRole, requireRole(\"Admin,Hr\"), locationController.getOne)\r\nrouter.post('/edit-location/:id', checkTokenRole, requireRole(\"Admin,Hr\"), locationController.edit)\r\nrouter.post('/delete-location/:id', checkTokenRole, requireRole(\"Admin,Hr\"), locationController.remove)\r\n\r\n//offer\r\nrouter.post('/create-offer', checkTokenRole, requireRole(\"Admin,Hr\"), offerController.create)\r\nrouter.get('/list-offer', checkTokenRole, offerController.list)\r\nrouter.get('/get-offer/:id', checkTokenRole, offerController.getOne)\r\nrouter.post('/edit-offer/:id', checkTokenRole, requireRole(\"Admin,Hr\"), offerController.edit)\r\nrouter.post('/delete-offer/:id', checkTokenRole, requireRole(\"Admin,Hr\"), offerController.remove)\r\n\r\n//applier\r\nconst storageApplier = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './upload');\r\n    },\r\n    filename: function (req, file, cb) {\r\n        const fileNameStore = `${uid(10)}_${file.originalname}`\r\n        console.log('fileNameStore', fileNameStore)\r\n        req.body.cv = fileNameStore\r\n        cb(null, fileNameStore)\r\n    }\r\n})\r\nconst uploadApplier = multer({ storage: storageApplier });\r\nrouter.post('/create-applier', uploadApplier.any(), applierController.create)\r\nrouter.get('/list-applier', checkTokenRole, applierController.list)\r\nrouter.get('/get-applier/:id', checkTokenRole, applierController.getOne)\r\nrouter.post('/edit-applier/:id', checkTokenRole, requireRole(\"Admin,Hr\"), applierController.edit)\r\nrouter.post('/delete-applier/:id', checkTokenRole, requireRole(\"Admin,Hr\"), applierController.remove)\r\n\r\n//university\r\n// const uploadApplier = multer({ storage: storageApplier });\r\nconst storageUniversity = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, './upload');\r\n    },\r\n    filename: function (req, file, cb) {\r\n        const fileNameStore = `${uid(10)}_${file.originalname}`\r\n        console.log('fileNameStore', fileNameStore)\r\n        req.body.fileUniversity = fileNameStore\r\n        cb(null, fileNameStore)\r\n    }\r\n})\r\nconst uploadUniversity = multer({ storage: storageUniversity });\r\nrouter.post('/import-university', checkTokenRole, requireRole(\"Admin,Hr\"), uploadUniversity.any(), universityController.importFile)\r\nrouter.post('/create-university', checkTokenRole, requireRole(\"Admin,Hr\"), universityController.create)\r\nrouter.get('/list-university', universityController.list)\r\nrouter.get('/get-university/:id', universityController.getOne)\r\nrouter.post('/edit-university/:id', checkTokenRole, requireRole(\"Admin,Hr\"), universityController.edit)\r\nrouter.post('/delete-university/:id', checkTokenRole, requireRole(\"Admin,Hr\"), universityController.remove)\r\n\r\n//course\r\nrouter.get('/list-myCourse/:id', learningPathController.listMyCourse)\r\nrouter.post('/updateResultVideo', courseController.updateResultVideo)\r\n\r\n//quiz\r\nrouter.get('/list-quiz/:idCourse/:idSection/:idLecture', questionController.getQuiz);\r\n\r\n//calculator point learning path \r\nrouter.post('/end-english-test', checkToken, entryCodeController.endEnglishTest)\r\nrouter.get('/list-entry-english-test', entryCodeController.getAllEnglishTest)\r\n\r\nrouter.get('/count-english-not-point', entryCodeController.countEnglishNotPoint)\r\nrouter.get('/get-question-essay-english-test/:id', entryCodeController.getQuestionEssayEnglishTest)\r\nrouter.post('/save-point-mark-english', entryCodeController.savePointEssayToDb);\r\n\r\nexport default router;\r\n"]}