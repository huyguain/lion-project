{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","set","config","secret","use","express","static","bodyParser","urlencoded","extended","json","limit","bodyLimit","mongoose","connect","database","useMongoClient","err","db","console","log","router","listen","process","env","PORT","port","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,MAAM,wBAAV;AACA;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;AACAA,IAAII,GAAJ,CAAQ,aAAR,EAAuBC,iBAAOC,MAA9B;;AAEA;AACAN,IAAIO,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAP,IAAIO,GAAJ,CAAQ,SAAR,EAAmBC,kBAAQC,MAAR,CAAe,QAAf,CAAnB;AACA;AACA;AACA;AACA;AACAT,IAAIO,GAAJ,CAAQ,qBAAR;AACAP,IAAIO,GAAJ,CAAQG,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAZ,IAAIO,GAAJ,CAAQG,qBAAWG,IAAX,CAAgB;AACvBC,QAAOT,iBAAOU;AADS,CAAhB,CAAR;;AAIA;AACAC,mBAASC,OAAT,CAAiBZ,iBAAOa,QAAxB,EAAkC,EAAEC,gBAAgB,IAAlB,EAAlC,EAA4D,UAACC,GAAD,EAAMC,EAAN,EAAa;AACxE,KAAID,GAAJ,EAAS;AACRE,UAAQC,GAAR,CAAY,0CAAZ;AACA;AACA;AACA,EAJD,MAIO;AACND,UAAQC,GAAR,CAAY,wBAAZ;AACA;AACD,CARD;;AAUAvB,IAAIO,GAAJ,CAAQ,MAAR,EAAgBiB,eAAhB;;AAEA;AACAxB,IAAIC,MAAJ,CAAWwB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBvB,iBAAOwB,IAA7C,EAAmD,YAAM;AACxDP,SAAQC,GAAR,sBAA+BvB,IAAIC,MAAJ,CAAW6B,OAAX,GAAqBD,IAApD;AACA,CAFD;;kBAIe7B,G","file":"index.js","sourcesContent":["import http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport config from './config.js';\r\nimport mongoose from 'mongoose';\r\nimport router from './router/index'\r\nimport './lib/mailer'\r\n\r\nlet app = express();\r\n//security\r\napp.server = http.createServer(app);\r\napp.set('superSecret', config.secret);\r\n\r\n// logger\r\napp.use(morgan('dev'));\r\napp.use('/upload', express.static('upload'));\r\n// 3rd party middleware\r\n// app.use(cors({\r\n// \texposedHeaders: config.corsHeaders\r\n// }));\r\napp.use(cors());\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\napp.use(bodyParser.json({\r\n\tlimit: config.bodyLimit\r\n}));\r\n\r\n// connect to db\r\nmongoose.connect(config.database, { useMongoClient: true }, (err, db) => {\r\n\tif (err) {\r\n\t\tconsole.log('Error initializing connection to MongoDB')\r\n\t\t// callback(err)\r\n\t\treturn;\r\n\t} else {\r\n\t\tconsole.log('Connect Successfully!!')\r\n\t}\r\n})\r\n\r\napp.use('/api', router);\r\n\r\n//create server\r\napp.server.listen(process.env.PORT || config.port, () => {\r\n\tconsole.log(`Started on port ${app.server.address().port}`);\r\n});\r\n\r\nexport default app;\r\n"]}